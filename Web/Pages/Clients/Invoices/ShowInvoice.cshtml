@page "/show-invoice/{id:int}"
@model ShowInvoiceModel
@{
}

@section Meta {
    <title>Faktura - @(Model.Invoice.Id) - @(Branding.WebsiteTitle)</title>
}

@section Header {
    <partial name="_Navbar" model="Model.UserToken" />
}

@await Html.PartialAsync("/Pages/Clients/_Shared/_Invoice.cshtml", Model.UserToken)

<main>

    <h4>
        Faktura
        <span class="muted">
            @(Model.Invoice.InvoiceNumber?.ToSwedish() ?? "fakturanummer saknas")
        </span>
    </h4>

    @if (Model.DraftBalanceRows.Count > 0)
    {
        <div class="notice">
            <p>
                ℹ️ Kreditering är påbörjad.
            </p>
            <ul>
                @foreach (var row in Model.DraftBalanceRows)
                {
                    <li>
                        <a href="/show-invoice-draft/@(row.InvoiceDraftId)">Utkast</a>
                    </li>
                }
            </ul>
        </div>
    }

    <ul class="notice">
        <li>
            @(Model.Invoice.Customer_Name)
        </li>
        @if (Model.Invoice.Customer_Address1.HasValue())
        {
            <li>
                @(Model.Invoice.Customer_Address1)
            </li>
        }
        @if (Model.Invoice.Customer_Address2.HasValue())
        {
            <li>
                @(Model.Invoice.Customer_Address2)
            </li>
        }
        <li>
            @(Model.Invoice.Customer_ZipCode)
            @(Model.Invoice.Customer_City)
        </li>
        @if (Model.Invoice.Customer_Country.HasValue())
        {
            <li>
                @(Model.Invoice.Customer_Country)
            </li>
        }
        <li>
            &nbsp;
        </li>
        <li>
            Fakturadatum:
            &thinsp;
            @(Model.Invoice.InvoiceDate.ToIso8601())
        </li>
        @if (Model.Invoice.DueDate.HasValue)
        {
            <li>
                Förfallodatum:
                &thinsp;
                @(Model.Invoice.DueDate.ToIso8601())
            </li>
        }
        @if (Model.Invoice.PaymentTerms.HasValue())
        {
            <li>
                @if (Model.Invoice.IsCredit)
                {
                    <span>Villkor</span>
                }
                else
                {
                    <span>Betalvillkor</span>
                }
                &thinsp;
                @(Model.Invoice.PaymentTerms)
            </li>
        }
        @if (Model.Invoice.About.HasValue())
        {
            <li>
                &nbsp;
            </li>
            <li>
                Sammanfattning: @(Model.Invoice.About)
            </li>
        }
    </ul>

    <h5>Artiklar</h5>

    <figure>
        <table>
            <tr>
                <th>Nr</th>
                <th>Artikel</th>
                <th class="end-align">Kvantitet</th>
                <th class="end-align">Pris</th>
                <th class="end-align">Moms-sats</th>
                @* <th>Netto</th>
                <th>Moms</th> *@
                <th class="end-align">Totalt</th>
            </tr>
            @foreach (var row in Model.InvoiceRows)
            {
                <tr>
                    <td>
                        @(row.ArticleNumber)
                    </td>
                    <td>
                        @(row.ArticleName)
                    </td>
                    <td class="end-align">
                        @(row.Quantity.ToOptionalDecimals())
                        @(row.Unit)
                    </td>
                    <td class="end-align">
                        @(row.UnitPrice.ToSwedish())
                        @(Swedish.Currency.Short)
                    </td>
                    <td class="end-align">
                        @(row.VatRate.ToOptionalDecimals()) %
                    </td>
                    @* <td>
                        @(row.NetAmount)
                    </td>
                    <td>
                        @(row.VatAmount)
                    </td> *@
                    <td class="end-align">
                        @(row.TotalAmount)
                    </td>
                </tr>
            }
        </table>
    </figure>

    <br />

    <h5>Summering</h5>

    <figure>
        <table>
            <tr>
                <th class="end-align">Netto</th>
                <th class="end-align">Moms</th>
                <th class="end-align">Avrundning</th>
                <th class="end-align">Totalt</th>
            </tr>
            <tr>
                <td class="end-align">
                    @(Model.Invoice.NetAmount.ToSwedish())
                </td>
                <td class="end-align">
                    @(Model.Invoice.VatAmount.ToSwedish())
                </td>
                <td class="end-align">
                    @(Model.Invoice.TotalRounding.ToSwedish())
                </td>
                <td class="end-align">
                    @(Model.Invoice.Total.ToSwedish())
                </td>
            </tr>
        </table>
    </figure>

    <br />

    <h5>Betalstatus</h5>

    <figure>
        <table>
            <tr>
                <th class="end-align">Balans</th>
                <th class="end-align">Kvar att betala</th>
            </tr>
            <tr>
                <td class="end-align">
                    @(Model.Invoice.Balance.ToSwedish())
                </td>
                <td class="end-align">
                    @(Model.Invoice.LeftToPay.ToSwedish())
                </td>
            </tr>
        </table>
    </figure>

    @if (Model.Invoice.IsCredit || Model.BalanceRows.Count > 0)
    {
        <br />

        <h5>Kreditering</h5>

        <figure>
            <table>
                <tr>
                    <th>Datum</th>
                    <th>Faktura</th>
                    <th class="end-align">Belopp</th>
                </tr>
                @foreach (var row in Model.BalanceRows)
                {
                    <tr>
                        <td>
                            @(row.Date.ToIso8601())
                        </td>
                        <td>
                            @(row.RefInvoiceNumber.ToString() ?? "-")
                        </td>
                        <td class="end-align">
                            @(row.Amount.ToSwedish())
                        </td>
                    </tr>
                }
            </table>
        </figure>

        <br />
    }

    @if (Model.InvoiceAccountingRows.Count > 0)
    {
        <br />

        <h5>Kontering</h5>

        <figure>
            <table>
                <tr>
                    <th>Konto</th>
                    <th class="end-align">Debet</th>
                    <th class="end-align">Kredit</th>
                </tr>
                @foreach (var row in Model.InvoiceAccountingRows)
                {
                    <tr>
                        <td>
                            @(row.Account ?? "Okänt")
                        </td>
                        <td class="end-align">
                            @(row.Debit.ToSwedish())
                        </td>
                        <td class="end-align">
                            @(row.Credit.ToSwedish())
                        </td>
                    </tr>
                }
            </table>
        </figure>

        <br />
    }

    <p>
        @if (Model.Invoice.IsCredit == false)
        {
            <a class="button" href="/credit-invoice-draft/@(Model.Invoice.Id)">
                Kreditera
            </a>
        }

        @if (Model.UserToken.IsAdmin)
        {
            <a class="button" href="/update-invoice-accounting-rows/@(Model.Invoice.Id)">
                Skapa kontering
            </a>
        }
    </p>

</main>
